{"version":3,"sources":["routes.js","pages/Home.js","pages/GetStarted.js","pages/Docs.js","App.js","serviceWorker.js","index.js"],"names":["routes","path","exact","name","component","state","displayGenerateCode","handleChangeDisplayCode","setState","this","codeFeature","className","onClick","id","href","Component","App","showNav","toggleNavBar","fallback","basename","process","role","aria-label","to","data-target","map","route","idx","key","render","props","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c23806ec.chunk.js","sourcesContent":["import Home from \"./pages/Home\";\nimport GetStarted from \"./pages/GetStarted\";\nimport Docs from \"./pages/Docs\";\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\nconst routes = [\n  { path: \"/\", exact: true, name: \"Home\", component: Home },\n  { path: \"/get_started\", name: \"Get Started\", component: GetStarted },\n  { path: \"/docs\", name: \"Docs\", component: Docs }\n];\n\nexport default routes;\n","import React, { Component } from \"react\";\nimport \"./Home.scss\";\n\nclass Index extends Component {\n  state = {\n    displayGenerateCode: true,\n  };\n\n  handleChangeDisplayCode = () => {\n    this.setState({\n      displayGenerateCode: !this.state.displayGenerateCode,\n    });\n  };\n\n  render() {\n    const { displayGenerateCode } = this.state;\n    const codeFeature = displayGenerateCode ? (\n      <ul>\n        <li>\n          Tensor provide abstractions for memory devices (RAM, ROM,\n          storage-devices, connectivity, etc)\n        </li>\n        <li>\n          Operator classes allow silicon providers to extend uTensor runtime\n          with their own optimized kernels.\n        </li>\n        <li>All memory usage can be governed by a predefined amount</li>\n        <li>Very low static and fixed dynamic memory footprint</li>\n        <li>Quantized Operations</li>\n        <li>Hand-codable, readable and debuggable C++</li>\n      </ul>\n    ) : (\n      <ul>\n        <li>The model is built with TensorFlow</li>\n        <li>\n          With a single function call, C++ files are generated from the trained\n          model\n        </li>\n        <li>Actions behind the scene:</li>\n        <ul>\n          <li>Dropout removal</li>\n          <li>Quantization</li>\n          <li>Offline Memory Planning</li>\n          <li>Out-of-order Execution Planning</li>\n          <li>Graph-rewriting (Node fusion and replacement)</li>\n        </ul>\n        <li>Multi-training framework and runtime support to come</li>\n      </ul>\n    );\n    return (\n      <div>\n        <section className=\"hero is-primary is-bold is-fullheight-with-navbar\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div className=\"columns\">\n                <h1 className=\"column is-size-1 has-text-centered\">\n                  Hands on Embedded Machine Learning\n                </h1>\n              </div>\n              <div className=\"columns\">\n                <div className=\"column is-size-4 has-text-right has-text-centered-mobile\">\n                  built by innovators & for the creators\n                </div>\n              </div>\n              <div className=\"columns\">\n                <div className=\"column is-size-5 intro\">\n                  uTensor is a completely free and open source embedded machine\n                  learning infrastructure designed for rapid-prototyping and\n                  deployment. At the present, the project includes an inference\n                  engine, a highly customizable graph processing tool and a data\n                  collection framework (work-in-progress). The device code is\n                  optimized for hardware with only a few kilobytes of memory.\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"hero is-medium is-light\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div className=\"columns is-variable is-7\">\n                <div className=\"column\">\n                  <h3 className=\"is-size-3\">Embedded Runtime</h3>\n                  <p>\n                    The core of uTensor is written in C++ and compiles down to\n                    less than 2 kilobytes. It supports both online and offline\n                    planning for various memory units making it friendly to\n                    integrate with your embedded project. Debugging and\n                    extending the project is also super easy.\n                  </p>\n                </div>\n                <div className=\"column\">\n                  <h3 className=\"is-size-3\">Simple Deployment</h3>\n                  <p>\n                    uTensor is designed to enable embedded engineers and data\n                    scientists to work with each other. Given a trained model,\n                    C++ implementation of the model is generated from the\n                    Jupyter-notebook with a single function call. The C++ source\n                    code is then copy-and-pasted into the embedded project\n                    folder to integrate with the application code.\n                  </p>\n                </div>\n                <div className=\"column\">\n                  <h3 className=\"is-size-3\">Graph Processing</h3>\n                  <p>\n                    The advancement of embedded machine learning will come from\n                    the ability to quickly experiment and test novel ideas. The\n                    SDK is written in Python, enabling anyone to leverage\n                    uTensor's existing toolchain for their research and\n                    prototypes.\n                  </p>\n                </div>\n                <div className=\"column\">\n                  <h3 className=\"is-size-3\">Open Ecosystem</h3>\n                  <p>\n                    The uTensor inference framework is not owned by anyone. We\n                    welcome anyone to join us in pushing the boundaries of\n                    machine learning and edge computing. The project currently\n                    supports Mbed and Tensorflow. The support of Arduino,\n                    PyTorch and others are under development and will be\n                    available soon.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"hero\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div className=\"buttons has-addons is-centered\">\n                <button\n                  className={\n                    displayGenerateCode\n                      ? \"button is-primary\"\n                      : \"button is-primary is-outlined\"\n                  }\n                  onClick={this.handleChangeDisplayCode}\n                >\n                  Generated Code\n                </button>\n                <button\n                  className={\n                    displayGenerateCode\n                      ? \"button is-primary is-outlined\"\n                      : \"button is-primary\"\n                  }\n                  onClick={this.handleChangeDisplayCode}\n                >\n                  Training Code\n                </button>\n              </div>\n              <div className=\"tile is-ancestor\">\n                <div className=\"tile is-parent is-8\">\n                  <div className=\"tile is-child box\" id=\"code\"></div>\n                </div>\n                <div className=\"tile is-parent\">\n                  <div className=\"tile is-child box\">\n                    <div className=\"content\">{codeFeature}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"hero is-medium is-dark is-bold\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div className=\"is-size-2 has-text-centered\">\n                Join the microTensor Communtiy\n              </div>\n              <div className=\"has-text-centered community-link-container\">\n                <a className=\"is-size-4 community-link\" href=\"/\">\n                  Donate\n                </a>\n                •\n                <a className=\"is-size-4 community-link\" href=\"/\">\n                  Get in Touch\n                </a>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","import React, { Component } from \"react\";\n\nclass GetStarted extends Component {\n  render() {\n    return (\n      <section>\n        <div className=\"container\">\n          <h1 className=\"title\">Let's get started.</h1>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default GetStarted;\n","import React, { Component } from \"react\";\n\nclass Docs extends Component {\n  render() {\n    return (\n      <section>\n        <div className=\"container\">\n          <h1 className=\"title\">Docs page is here.</h1>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Docs;\n","import React, { Component, Suspense } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch, Link } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport \"./App.scss\";\n\nconst loading = () => <div>Loading...</div>;\n\nclass App extends Component {\n  state = {\n    showNav: false,\n  };\n\n  toggleNavBar = () => {\n    this.setState({\n      showNav: !this.state.showNav,\n    });\n  };\n\n  render() {\n    return (\n      <Suspense fallback={loading()}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <nav\n            className=\"navbar\"\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n          >\n            <div className=\"container\">\n              <div className=\"navbar-brand\">\n                <Link to=\"/\" className=\"navbar-item\">\n                  uTensor\n                </Link>\n                <div\n                  className=\"navbar-burger burger\"\n                  data-target=\"navMenu\"\n                  onClick={this.toggleNavBar}\n                >\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div\n                className={\n                  this.state.showNav ? \"navbar-menu is-active\" : \"navbar-menu\"\n                }\n                id=\"navMenu\"\n              >\n                <div className=\"navbar-end\">\n                  <Link className=\"navbar-item\" to=\"/get_started\">\n                    Jump Start\n                  </Link>\n                  <Link className=\"navbar-item\" to=\"/docs\">\n                    Docs\n                  </Link>\n                  <a className=\"navbar-item\" href=\"https://github.com/utensor\">\n                    Join\n                  </a>\n                  <a className=\"navbar-item\" href=\"https://github.com/utensor\">\n                    Donate\n                  </a>\n                  <a className=\"navbar-item\" href=\"https://github.com/utensor\">\n                    <i className=\"fab fa-github\"></i>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </nav>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component ? (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={(props) => <route.component {...props} />}\n                />\n              ) : null;\n            })}\n            <Redirect to=\"/\" />\n          </Switch>\n          <footer className=\"footer\">\n            <div className=\"content has-text-centered\">\n              <p className=\"has-text-primary\">\n                <i className=\"fas fa-heart\"></i> by uTensor\n              </p>\n            </div>\n          </footer>\n        </BrowserRouter>\n      </Suspense>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}