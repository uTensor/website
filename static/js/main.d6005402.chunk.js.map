{"version":3,"sources":["assets/uTensor-mNIST-demo.mp4","assets/github.svg","assets/slack.svg","components/GeneratedCode.js","components/TrainingCode.js","routes.js","pages/Home.js","pages/GetStarted.js","pages/Docs.js","App.js","serviceWorker.js","index.js","assets/utensor.png","assets/open-collective.svg"],"names":["module","exports","GeneratedCode","language","style","tomorrowNightEighties","wrapLines","codeTagProps","fontFamily","fontSize","TrainingCode","routes","path","exact","name","component","state","displayGenerateCode","handleChangeDisplayCode","setState","this","codeFeature","className","playsInline","autoPlay","muted","loop","src","demoVideo","type","href","alt","github","width","slack","utensorPicture","onClick","openCollective","Component","App","showNav","toggleNavBar","fallback","basename","process","role","aria-label","to","data-target","id","map","route","idx","key","render","props","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d6005402.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uTensor-mNIST-demo.bdbb13e7.mp4\";","module.exports = __webpack_public_path__ + \"static/media/github.678688b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/slack.125e7aab.svg\";","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport React from \"react\";\nimport { tomorrowNightEighties } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nconst GeneratedCode = () => {\n  const codeString =\n    \"// Assume Initialized memory allocators \\n// Create a 2x2 Tensor from data owned by the user \\nint8_t my_input_buffer[4] = {1, 2, 3, 4}; \\nTensor a = new BufferTensor({2, 2}, i8, my_input_buffer); \\n// Update a value in our buffer. \\nmy_input_buffer[3] = 5; \\n// Create Tensors of int8_t from const static arrays in ROM \\nTensor b = new RomTensor({2, 2}, i8, array_of_values_b); \\n// Create a Tensor to store the output in RAM \\nTensor c = new RamTensor({2, 2}, i8); \\n// Tensors are mapped to the operator's parameters by name and raises compile time errors when mismatch. \\n// The name binding + lack of parameter ordering makes ctag jumping and GDB sessions super easy \\nMatrixMultOperator<int8_t> mult_AB; \\nmult_AB \\n    .set_inputs({{MatrixMultOperator<int8_t>::a, a}, {MatrixMultOperator<int8_t>::b, b}}) \\n    .set_outputs({{MatrixMultOperator<int8_t>::c, c}}) \\n    .eval(); \\n// Elements in Tensor c can be accessed with: \\nint8_t element = static_cast<int8_t>(c(i,j));\";\n  return (\n    <SyntaxHighlighter\n      language=\"c++\"\n      style={tomorrowNightEighties}\n      wrapLines={true}\n      codeTagProps={{\n        style: {\n          fontFamily: \"Hack\",\n          fontSize: \"12px\",\n        },\n      }}\n    >\n      {codeString}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default GeneratedCode;\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport React from \"react\";\nimport { tomorrowNightEighties } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nconst TrainingCode = () => {\n  const codeString =\n    \"from __future__ import absolute_import, division, print_function, unicode_literals \\nfrom utensor_cgen.api.export import tflm_keras_export \\nimport tensorflow as tf \\nimport numpy as np \\nfrom tensorflow.keras.layers import Dense, Flatten, Conv2D, MaxPooling2D \\nfrom tensorflow.keras import Model \\n \\nmnist = tf.keras.datasets.mnist \\n(x_train, y_train), (x_test, y_test) = mnist.load_data() \\n \\nclass MyModel(Model): \\n    def __init__(self): \\n        super(MyModel, self).__init__() \\n        self.conv1 = Conv2D(8, 3, activation='relu') \\n        self.pool = MaxPooling2D() \\n        self.flatten = Flatten() \\n        self.d1 = Dense(10) \\n    def call(self, x): \\n        x0 = self.conv1(x) \\n        x1 = self.pool(x0) \\n        x2 = self.flatten(x1) \\n        return self.d1(x2) \\n \\nmodel = MyModel() \\ntrain_your_model(model) \\n \\n# representative data function \\n# provides random sample from the dataset \\n# to be used for offline-quantization \\nnum_calibration_steps = 128 \\ncalibration_dtype = tf.float32 \\ndef representative_dataset_gen(): \\n    for _ in range(num_calibration_steps): \\n        rand_idx = np.random.randint(0, x_test.shape[0]-1) \\n        sample = x_test[rand_idx] \\n        sample = sample[tf.newaxis, ...] \\n        sample = tf.cast(sample, dtype=calibration_dtype) \\n        yield [sample] \\n \\n# Export uTensor C++ impplementation with an one-liner \\ntflm_keras_export( \\n    model, \\n    representive_dataset=representative_dataset_gen, \\n    model_name='my_model', \\n    target='utensor', \\n)\";\n  return (\n    <SyntaxHighlighter\n      language=\"python\"\n      style={tomorrowNightEighties}\n      wrapLines={true}\n      codeTagProps={{\n        style: {\n          fontFamily: \"Hack\",\n          fontSize: \"12px\",\n        },\n      }}\n    >\n      {codeString}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default TrainingCode;\n","import Home from \"./pages/Home\";\nimport GetStarted from \"./pages/GetStarted\";\nimport Docs from \"./pages/Docs\";\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\nconst routes = [\n  { path: \"/\", exact: true, name: \"Home\", component: Home },\n  { path: \"/get_started\", name: \"Get Started\", component: GetStarted },\n  { path: \"/docs\", name: \"Docs\", component: Docs }\n];\n\nexport default routes;\n","import React, { Component } from \"react\";\nimport \"./Home.scss\";\nimport demoVideo from \"../assets/uTensor-mNIST-demo.mp4\";\nimport utensorPicture from \"../assets/utensor.png\";\nimport openCollective from \"../assets/open-collective.svg\";\nimport github from \"../assets/github.svg\";\nimport slack from \"../assets/slack.svg\";\nimport GeneratedCode from \"../components/GeneratedCode\";\nimport TrainingCode from \"../components/TrainingCode\";\n\nclass Index extends Component {\n  state = {\n    displayGenerateCode: true,\n  };\n\n  handleChangeDisplayCode = () => {\n    this.setState({\n      displayGenerateCode: !this.state.displayGenerateCode,\n    });\n  };\n\n  render() {\n    const { displayGenerateCode } = this.state;\n    const codeFeature = displayGenerateCode ? (\n      <ul>\n        <li>\n          Tensor provide abstractions for memory devices (RAM, ROM,\n          storage-devices, connectivity, etc)\n        </li>\n        <li>\n          Operator classes allow silicon providers to extend uTensor runtime\n          with their own optimized kernels.\n        </li>\n        <li>All memory usage can be governed by a predefined amount</li>\n        <li>Very low static and fixed dynamic memory footprint</li>\n        <li>Quantized Operations</li>\n        <li>Hand-codable, readable and debuggable C++</li>\n      </ul>\n    ) : (\n      <ul>\n        <li>The model is built with TensorFlow</li>\n        <li>\n          With a single function call, C++ files are generated from the trained\n          model\n        </li>\n        <li>Actions behind the scene:</li>\n        <ul>\n          <li>Dropout removal</li>\n          <li>Quantization</li>\n          <li>Offline Memory Planning</li>\n          <li>Out-of-order Execution Planning</li>\n          <li>Graph-rewriting (Node fusion and replacement)</li>\n        </ul>\n        <li>Multi-training framework and runtime support to come</li>\n      </ul>\n    );\n    return (\n      <div>\n        <section className=\"hero is-fullheight-with-navbar video\">\n          <div className=\"hero-video\">\n            <video playsInline autoPlay muted loop className=\"video-background\">\n              <source src={demoVideo} type=\"video/mp4\" />\n            </video>\n          </div>\n          <div className=\"hero-body video-cover\">\n            <div className=\"container\">\n              <div className=\"columns\">\n                <h1 className=\"column is-size-1 has-text-centered noto-sans-font cover-title\">\n                  Hands on Embedded Machine Learning\n                </h1>\n              </div>\n              <div className=\"columns\">\n                <div className=\"column is-size-3 has-text-centered-touch is-offset-6 noto-sans-font cover-subtitle\">\n                  built by innovators & for the creators\n                </div>\n              </div>\n              <div className=\"columns\">\n                <div className=\"column is-size-5 is-6-desktop is-9 is-offset-1-desktop has-text-left-tablet noto-sans-font cover-detail\">\n                  uTensor is a free and open source embedded machine\n                  learning infrastructure designed for rapid-prototyping and\n                  deployment. The project includes an inference\n                  engine, a highly customizable graph processing tool and a data\n                  collection framework (work-in-progress). The device code is\n                  optimized for hardware with only a few kilobytes of memory.\n                </div>\n              </div>\n              <div className=\"columns is-centered mt-3\">\n                <div className=\"column is-narrow\">\n                  <a\n                    className=\"is-size-6 community-link is-uppercase button\"\n                    href=\"https://github.com/utensor\"\n                  >\n                    <img alt=\"github\" src={github} width=\"20\" ></img>\n                    Contribute\n                  </a>\n                </div>\n                <div className=\"column is-narrow\">\n                  <a\n                    className=\"is-size-6 community-link is-uppercase button\"\n                    href=\"https://utensor.slack.com/join/shared_invite/zt-6vf9jocy-lzk5Aw11Z8M9GPf_KS5I~Q#/\"\n                  >\n                    <img alt=\"slack\" src={slack} width=\"20\" ></img>\n                    Chat on Slack\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"hero is-hidden-tablet\">\n          <video playsInline autoPlay muted loop className=\"video\">\n            <source src={demoVideo} type=\"video/mp4\" />\n          </video>\n        </section>\n        <section className=\"hero is-medium is-light\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div className=\"columns is-variable is-7\">\n                <div className=\"column\">\n                  <h3 className=\"is-size-3 ubuntu-font\">Embedded Runtime</h3>\n                  <p className=\"noto-sans-font\">\n                    As little as 2kb, C++ graph implementations can be either\n                    hand-coded or auto-generated from trained models.\n                  </p>\n                </div>\n                <div className=\"column\">\n                  <h3 className=\"is-size-3 ubuntu-font\">Simple Deployment</h3>\n                  <p className=\"noto-sans-font\">\n                    From Jupyter-notebooks to MCUs, uTensor is the channel for\n                    data scientists and embedded engineers.\n                  </p>\n                </div>\n                <div className=\"column\">\n                  <h3 className=\"is-size-3 ubuntu-font\">Graph Processing</h3>\n                  <p className=\"noto-sans-font\">\n                    Innovating in embedded-ML requires rapid iteration of ideas.\n                    uTensor SDK provides easily-customizable graph transformers\n                    in Python.\n                  </p>\n                </div>\n                <div className=\"column\">\n                  <h3 className=\"is-size-3 ubuntu-font\">Open Ecosystem</h3>\n                  <p className=\"noto-sans-font\">\n                    uTensor is an embedded-ML infrastructure. Bring your own\n                    ops, graph-transformations, or port it to new platforms; it\n                    is for everyone.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"hero\">\n          <div className=\"hero-body\">\n            <div className=\"utensor-picture\">\n              <img alt=\"utensor\" src={utensorPicture}></img>\n            </div>\n          </div>\n        </section>\n        <section className=\"hero\">\n          <div className=\"hero-body is-background-utensor\">\n            <div className=\"container\">\n              <div className=\"buttons has-addons is-centered\">\n                <button\n                  className={\n                    displayGenerateCode\n                      ? \"button is-primary\"\n                      : \"button is-primary is-outlined\"\n                  }\n                  onClick={this.handleChangeDisplayCode}\n                >\n                  Generated Code\n                </button>\n                <button\n                  className={\n                    displayGenerateCode\n                      ? \"button is-primary is-outlined\"\n                      : \"button is-primary\"\n                  }\n                  onClick={this.handleChangeDisplayCode}\n                >\n                  Training Code\n                </button>\n              </div>\n              <div className=\"tile is-ancestor\">\n                <div className=\"tile is-parent is-8\">\n                  <div className=\"tile is-child code-content\">\n                    {displayGenerateCode ? <GeneratedCode /> : <TrainingCode />}\n                  </div>\n                </div>\n                <div className=\"tile is-parent\">\n                  <div className=\"tile is-child code-explain\">\n                    <div className=\"content is-family-secondary\">\n                      {codeFeature}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"hero is-medium\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div className=\"is-size-2 has-text-centered has-text-primary\">\n                Join the uTensor Community\n              </div>\n              <div className=\"mt-3\">\n                <div className=\"columns is-centered\">\n                  <div className=\"column is-narrow\">\n                    <a\n                      className=\"is-size-4 community-link is-secondary-color is-uppercase\"\n                      href=\"https://github.com/utensor\"\n                    >\n                      <img alt=\"github\" src={github} width=\"20\" ></img>\n                      Contribute\n                    </a>\n                  </div>\n                  <div className=\"column is-narrow\">\n                    <a\n                      className=\"is-size-4 community-link is-secondary-color is-uppercase\"\n                      href=\"https://utensor.slack.com/join/shared_invite/zt-6vf9jocy-lzk5Aw11Z8M9GPf_KS5I~Q#/\"\n                    >\n                      <img alt=\"slack\" src={slack} width=\"20\" ></img>\n                      Chat on Slack\n                    </a>\n                  </div>\n                  <div className=\"column is-narrow\">\n                    <a\n                      className=\"is-size-4 community-link is-secondary-color is-uppercase\"\n                      href=\"https://opencollective.com/utensorai\"\n                    >\n                      <img alt=\"open collective\" src={openCollective} width=\"20\" ></img>\n                      Sponsor\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","import React, { Component } from \"react\";\n\nclass GetStarted extends Component {\n  render() {\n    return (\n      <section>\n        <div className=\"container\">\n          <h1 className=\"title\">Let's get started.</h1>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default GetStarted;\n","import React, { Component } from \"react\";\n\nclass Docs extends Component {\n  render() {\n    return (\n      <section>\n        <div className=\"container\">\n          <h1 className=\"title\">Docs page is here.</h1>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Docs;\n","import React, { Component, Suspense } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch, Link } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport \"./App.scss\";\n\nconst loading = () => <div>Loading...</div>;\n\nclass App extends Component {\n  state = {\n    showNav: false,\n  };\n\n  toggleNavBar = () => {\n    this.setState({\n      showNav: !this.state.showNav,\n    });\n  };\n\n  render() {\n    return (\n      <Suspense fallback={loading()}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <nav\n            className=\"navbar\"\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n          >\n            <div className=\"container\">\n              <div className=\"navbar-brand\">\n                <Link\n                  to=\"/\"\n                  className=\"navbar-item noto-sans-font has-text-primary has-text-weight-semibold\"\n                >\n                  uTensor\n                </Link>\n                <div\n                  className=\"navbar-burger burger\"\n                  data-target=\"navMenu\"\n                  onClick={this.toggleNavBar}\n                >\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div\n                className={\n                  this.state.showNav ? \"navbar-menu is-active\" : \"navbar-menu\"\n                }\n                id=\"navMenu\"\n              >\n                <div className=\"navbar-end\">\n                  <a\n                    className=\"navbar-item ubuntu-font\"\n                    href=\"https://github.com/uTensor/utensor-helloworld\"\n                  >\n                    Jump Start\n                  </a>\n                  <a\n                    className=\"navbar-item ubuntu-font\"\n                    href=\"https://github.com/uTensor/website/blob/master/docs.md\"\n                  >\n                    Docs\n                  </a>\n                  <a\n                    className=\"navbar-item ubuntu-font\"\n                    href=\"https://utensor.slack.com/join/shared_invite/zt-6vf9jocy-lzk5Aw11Z8M9GPf_KS5I~Q#/\"\n                  >\n                    Join\n                  </a>\n                  <a\n                    className=\"navbar-item ubuntu-font\"\n                    href=\"https://opencollective.com/utensorai\"\n                  >\n                    Sponsor\n                  </a>\n                  <a\n                    className=\"navbar-item ubuntu-font\"\n                    href=\"https://github.com/utensor\"\n                  >\n                    <i className=\"fab fa-github fa-lg\"></i>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </nav>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component ? (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={(props) => <route.component {...props} />}\n                />\n              ) : null;\n            })}\n            <Redirect to=\"/\" />\n          </Switch>\n          <footer className=\"footer\">\n            <div className=\"content has-text-centered\">\n              <p className=\"has-text-primary noto-sans-font\">\n                <i className=\"fas fa-heart\"></i> by uTensor\n              </p>\n            </div>\n          </footer>\n        </BrowserRouter>\n      </Suspense>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/utensor.342335a1.png\";","module.exports = __webpack_public_path__ + \"static/media/open-collective.8a4a52cb.svg\";"],"sourceRoot":""}